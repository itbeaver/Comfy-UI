#cloud-config

write_files:
  - path: /etc/ssh/sshd_config
    append: true
    content: |
      Port ${SSH_PORT}
      Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr

  - path: /etc/fail2ban/jail.d/defaults-debian.conf
    content: |
      [sshd]
      enabled = true
      port = ${SSH_PORT}

  - path: /etc/docker/daemon.json
    permissions: 0644
    content: |
      {
        "log-driver": "json-file",
        "log-opts": {"max-size": "10m", "max-file": "5"}
      }

  - path: /root/preflight.sh
    permissions: 0755
    content: |
      #!/bin/bash
      . /etc/environment
      echo "--> Removing snapd so it doesn't cause extra load on smaller VMs"
      apt-get purge -y snapd unattended-upgrades
      rm -rf /snap /var/snap /var/lib/snapd /var/log/unattended-upgrades
      echo "--> Package updates"
      apt-get update
      apt-get dist-upgrade -y
      apt-get autoremove -y
      echo "--> Setting up Docker"
      # We are not supposed to SSH to agents, but this is useful for troubleshooting
      usermod -aG docker ${ADMIN_USERNAME}
      echo "Starting Docker"
      systemctl start docker
      echo "--> Installing NVIDIA drivers"
      ubuntu-drivers autoinstall
      apt-get install -y nvidia-cuda-toolkit

      #echo "--> Installing Python 3.10"
      #apt-get install -y software-properties-common
      #add-apt-repository ppa:deadsnakes/ppa -y
      #apt-get install python3.10 python3.10-dev python3.10-venv python3.10-distutils
      #update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 1
      
      echo "--> Installing Stable Diffusion toolkit"
      pip3 install jupyterlab ipywidgets markupsafe==2.0.1 imaginairy==6.0.0a0 --upgrade
      echo "--> Redirecting model cache to file share (loading will be slower)"
      mkdir -p /srv/.cache
      rm -rf /home/${ADMIN_USER}/.cache
      ln -s /srv/.cache /home/${ADMIN_USER}/.cache
      echo "==> Preflight done."

  - path: /root/controlled-shutdown.sh
    permissions: 0755
    content: |
      #!/bin/bash
      HOSTNAME=`hostname`
      # TODO

  - path: /root/spot-helper.py
    permissions: 0755
    content: |
      #!/usr/bin/env python3

      # Leave the machine in an orderly state when the spot instance is preempted or scheduled for maintenance

      from subprocess import check_output
      from socket import gethostname
      from time import sleep
      from json import loads
      from urllib.request import Request, urlopen
      from urllib.parse import urlencode

      METADATA_URL = "http://169.254.169.254/metadata/scheduledevents?api-version=2017-11-01"
      
      def get_scheduled_events():
          req = Request(METADATA_URL)
          req.add_header('Metadata', 'true')
          res = urlopen(req)
          data = loads(res.read())
          return data

      def acknowledge_event(event_id):
          req = Request(METADATA_URL, urlencode({"StartRequests":[{"EventId":event_id}]}))
          req.add_header('Metadata', 'true')
          res = urlopen(req)
          data = res.read()
          return data

      def handle_events(data):
          hostname = gethostname()
          for event in data['Events']:
              if hostname in event['Resources'] and event['EventType'] in ['Reboot', 'Redeploy', 'Preempt']:
                  check_output('/root/controlled-shutdown.sh', shell=True)
                  acknowledge_event(event['EventId'])

      if __name__ == '__main__':
          while(True):
             sleep(15)
             handle_events(get_scheduled_events())

  - path: /etc/systemd/system/spot-helper.service
    permissions: 0444
    content: |
      [Unit]
      Description=Azure Spot Instance Events
      DefaultDependencies=no
      After=multi-user.target
      [Service]
      Type=oneshot
      ExecStart=/root/spot-helper.py
      [Install]
      WantedBy=multi-user.target

  - path: /etc/waagent.conf
    permissions: 0444
    content: |
      ResourceDisk.Format=y
      ResourceDisk.Filesystem=ext4
      ResourceDisk.EnableSwap=y
      ResourceDisk.SwapSizeMB=2048

mounts:
  - - //${STORAGE_ACCOUNT_NAME}.file.core.windows.net/${SHARE_NAME}
    - /srv
    - cifs
    - vers=3.0,username=${STORAGE_ACCOUNT_NAME},password=${STORAGE_ACCOUNT_KEY},dir_mode=0770,file_mode=0660,uid=1000,gid=1000,noperm,noatime,mfsymlinks,iocharset=utf8

packages:
  - curl
  - docker.io
  - fail2ban
  - htop
  - make
  - ntp
  - stow
  - sudo
  - tmux
  - vim
  - ubuntu-drivers-common
  - build-essential
  
runcmd:
  - systemctl enable spot-helper
  - /root/preflight.sh
  - reboot